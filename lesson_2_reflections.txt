What happens when you initialize a repository? Why do you need to do it?
    
    I believe metadata directory and files are created to be able to track subsequent changes in the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    Staging are contains changes, which are work in progress and may be commited. It is used to accumulate logical changes related to a single commit. It offers the ability to flexibly change files and to undo changes.

-- Lesson3 --

How can you use the staging area to make sure you have one commit per logical change?

    I can add to staging area only those files which contain changes related to a single logical goal.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    
    It would help to separate development of new features and working on large bugfixes.

How do the diagrams help you visualize the branch structure?
    
    Diagram IS a visualization, so I can't get the question... Maybe the answer should be "by displaying diagram of the branch structure".

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
    
    The result is that one of the branches has all the commits from both branches sorted according to timestamps. We represent it the way we do to emphasize that changes from one branche were made separately from the other and that, finally, one of the branches contains all the commits.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
    
    Pros: Less work for developer
    Cons: Less control