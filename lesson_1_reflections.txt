How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Помогает тем, что значительно сужается область поиска бага - достаточно проверить только измененные строки.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Я смогу учиться на своих ошибках.
    Я смогу быстрее находить изменения, приведшие к ошибкам.
    Я смогу сократить время на обслуживание различных версий документов.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Каждый коммит содержит логически целостное состояние файлов
    Cons: Возможность потерять какие-то данные при редких коммитах

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Это связано с тем, что в одних случаях файл является конечным объектом, содержащим все необходимые для работы данные.
    В других случаях важно состояние совокупности файлов, как например в исходных текстах программ.

How can you use the commands git log and git diff to view the history of files?

    git log - all repo log
    git log <file> - this file log
    git log grep=<patter> - find commits with commit messages matching the pattern

    git diff <commit1> <commit2> - get diff of changes introduced in <commit2> since <commit1>
    git diff <commit> - get diff between HEAD and the <commit>
    git diff --stat ... - show only summary (statistics of files changes)


How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
